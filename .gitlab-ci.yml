---
image: gitlab-registry.cern.ch/linuxsupport/cc7-base:latest

include:
  - 'https://gitlab.cern.ch/linuxsupport/rpmci/raw/master/rpm-ci.yml'


.installGo14: &installGo14 |
  mkdir /go14
  yum install -y gcc
  curl https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz  | tar -zxC /go14
  ln -s /go14/go/bin/go /usr/bin/go14
  export GOPATH=/go
  go14 get ./...


.config: &config |
  mkdir -p /usr/local/etc /etc/httpd/conf/
  cp tests/landb/goermis.yaml /usr/local/etc/goermis.yaml
  sed -i -e "s/##REPLACE_BY_USER##/${SOAPUSER}/g" /usr/local/etc/goermis.yaml
  sed -i -e "s/##REPLACE_BY_PASSWORD##/${SOAPPASSWORD}/g" /usr/local/etc/goermis.yaml
  sed -i -e "s/##REPLACE_BY_DB##/${DATABASE}/g" /usr/local/etc/goermis.yaml
  sed -i -e "s/##REPLACE_BY_USERNAME##/${DB_USERNAME}/g" /usr/local/etc/goermis.yaml
  sed -i -e "s/##REPLACE_BY_DB_PASSWORD##/${DB_PASSWORD}/g" /usr/local/etc/goermis.yaml
  sed -i -e "s/##REPLACE_BY_HOST##/${DB_HOST}/g" /usr/local/etc/goermis.yaml
  sed -i -e "s/##REPLACE_BY_PORT##/${DB_PORT}/g" /usr/local/etc/goermis.yaml
  echo "$ERMISCERT" > /etc/httpd/conf/ermiscert.pem
  echo "$ERMISKEY" > /etc/httpd/conf/ermiskey.pem
  echo "$CACERT" > /etc/httpd/conf/ca.pem
  ls -al /etc/httpd/conf/
  chmod 600 /etc/httpd/conf/ermiscert.pem /etc/httpd/conf/ermiskey.pem
  

variables:
  KOJI_TAG: 'lb'
  KOJI_TAG_7: 'ai7'

  BUILD_7: 'True'
  BUILD_8: 'True'

  DIST_8: .el8
  DIST_7: .ai7
  DIST_6: .ai6

.patch_version: &patch_version |
    RELEASE=`grep 'Release = "' main.go | awk -F \" '{print $2}'`
    VERSION=`grep 'Version = "' main.go | awk -F \" '{print $2}'`
    cat ermis.spec.tpl  | sed "s/#REPLACE_BY_VERSION#/$VERSION/" | sed "s/#REPLACE_BY_RELEASE#/$RELEASE/" > ermis.spec

.rpm_deps:
  before_script:
    - *patch_version
    - yum-builddep -y *.spec

build_srpm7:
  before_script:
    - *patch_version
    - yum-builddep -y --disableplugin=protectbase,priorities *.spec

build_rpm7:
  before_script:
    - *patch_version
    - yum-builddep -y --disableplugin=protectbase,priorities *.spec

build-go14:
  stage: test
  script:
    - *installGo14
    - go14 build -race ./...

behave:
  image: gitlab-registry.cern.ch/ai-config-team/ai-tools
  stage: prebuild
  allow_failure: false
  script:
    - yum -y install krb5-workstation gcc python3-devel krb5-devel python3-requests python3-requests-kerberos
    - pip3 install behave 
    - cd  tests/behave
    - echo $ERMISTST_DECODED | kinit ermistst@CERN.CH
    - klist
    - behave . -D ermistst=$ERMISTST -D ermists=$ERMISTS

landb:
  #image: gitlab-registry.cern.ch/ai-config-team/ai-tools
  stage: prebuild
  allow_failure: false
  script:
    - *patch_version
    - *installGo14
    - *config
    - echo "READY TO DO THE SOAP CALL"
    - go14 test .



build_docker_prod:
  image: gitlab-registry.cern.ch/ci-tools/docker-image-builder:latest
  stage: prebuild
  script: "echo"
  tags:
    - docker-image-build
  variables:
    DOCKER_FILE: Dockerfile.prod
    TO: ${CI_REGISTRY_IMAGE}/prod:${CI_COMMIT_BRANCH}

build_docker_qa:
  image: gitlab-registry.cern.ch/ci-tools/docker-image-builder:latest
  stage: prebuild
  script: "echo"
  tags:
    - docker-image-build
  variables:
    DOCKER_FILE: Dockerfile.qa
    TO: ${CI_REGISTRY_IMAGE}/qa:${CI_COMMIT_BRANCH}


test-go14:
  image: gitlab-registry.cern.ch/ai-config-team/ai-tools
  stage: prebuild
  allow_failure: false
  script:
    - *patch_version
    - *installGo14
    - *config
    - yum -y install sendmail
    - echo "READY TO DO START THE CI TESTS"
    - go14 test -v -cover ./tests/ci/...
    - go14 test -race ./tests/ci/...

bench-go14:
  stage: test
  script:
    - *installGo14
    - go14 test ./tests/benchmarking/... -bench=. -benchmem
    - go14 test ./tests/benchmarking/... -bench=. -benchmem -race


